version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: manufacturing_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME:-manufacturing_db}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - manufacturing_network

  # Manufacturing Analytics Microservice
  analytics_service:
    build: .
    container_name: manufacturing_analytics
    restart: unless-stopped
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${DATABASE_NAME:-manufacturing_db}?authSource=admin
      DATABASE_NAME: ${DATABASE_NAME:-manufacturing_db}
      OUTPUT_DIR: /app/analytics_output
      SCHEDULE_INTERVAL_MINUTES: ${SCHEDULE_INTERVAL_MINUTES:-60}
      FLASK_ENV: ${FLASK_ENV:-production}
    ports:
      - "5000:5000"
    volumes:
      - analytics_output:/app/analytics_output
      - grafana_csv:/var/lib/grafana/csv
    depends_on:
      - mongodb
    networks:
      - manufacturing_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: manufacturing_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: marcusolsson-csv-datasource
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_csv:/var/lib/grafana/csv:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - analytics_service
    networks:
      - manufacturing_network

  # MongoDB Express for database management (optional)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: manufacturing_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-pass123}
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - manufacturing_network
    profiles:
      - debug

volumes:
  mongodb_data:
    driver: local
  grafana_data:
    driver: local
  analytics_output:
    driver: local
  grafana_csv:
    driver: local

networks:
  manufacturing_network:
    driver: bridge